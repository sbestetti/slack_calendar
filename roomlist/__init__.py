from __future__ import print_function
import datetime
from googleapiclient.discovery import build
from httplib2 import Http
from oauth2client import file, client, tools
import json

SCOPES = 'https://www.googleapis.com/auth/calendar.readonly'

def get_room_list(office):    
    """Returns the list of first events for all rooms for the required
    office using the list of rooms parsed from read_json_list() and a service
    generated by get_google_api_service()"""
    rooms = read_json_list(office)
    print("Content of rooms: \n" + str(rooms))
    service = get_google_api_service()
    now = datetime.datetime.utcnow().isoformat() + 'Z'
    events = []
    for room in rooms:
        events_result = service.events().list(calendarId='primary', timeMin=now,
                                            maxResults=10, singleEvents=True,
                                            orderBy='startTime').execute()
        events = events_result.get('items', [])

    if not events:
        print('No upcoming events found.')
    for event in events:
        start = event['start'].get('dateTime', event['start'].get('date'))
        print(start, event['summary'])

    # for room in rooms:
    #     events_result = service.events().list(
    #         calendarId=room['address'],
    #         timeMin=now,
    #         maxResults=1,
    #         singleEvents=True,
    #         orderBy='startTime'
    #     ).execute()
    #     events.append(events_result.get('items', []))

    # print('Size of "events": ' + str(len(events)))
    # print('Type of "event" inside "events": ' + str(type(events[0])))
    # print('Size "event" in "events": ' + str(len(events[0])))
    # print("Content of the 1st item of the first event: " + str(events[0][0]))
    # print("Type of the 1st item of the first event: " + str(type(events[0][0])))
    #print("Field content of 1st item of the first event: " + str(events[0][0]['summary']))

    # for event in events:
    #     summary = event[0]['summary']
    #     room = event[0]['location']
    #     print("{} in {}.".format(summary, room))

    
    

    return events

def read_json_list(office):
    """Reads the list of rooms from a json file and return 
    the ones from the required office"""
    with open('rooms.json') as f:
        json_list = json.load(f)
        rooms = json_list['rooms']
        result = []
        for room in rooms:
            if room['office'] == office:
                result.append(room)
        return result

def get_google_api_service():
    """Manage authentication with Google's API and returns a usable service"""
    store = file.Storage('token.json')
    creds = store.get()
    if not creds or creds.invalid:
        flow = client.flow_from_clientsecrets('credentials.json', SCOPES)
        creds = tools.run_flow(flow, store)
    
    service = build('calendar', 'v3', http=creds.authorize(Http()))
    return service


        